sudo: required
language: go
go:
  - 1.12.6
services:
  - docker
go_import_path: github.com/fibercrypto/fibercryptowallet
matrix:
  include:
    #- stage: RPI
    #  if: branch = release*$
    #  install:
    #    - DEFAULT_ARCH=rpi1 make install-docker-deps
    #    - DEFAULT_ARCH=rpi2 make install-docker-deps
    #    - DEFAULT_ARCH=rpi3 make install-docker-deps
    #    - make install-deps-no-envs
    #  script:
    #    - make clean
    #    - DEFAULT_TARGET=rpi1 make build-docker
    #    - DEFAULT_TARGET=rpi2 make build-docker
    #    - DEFAULT_TARGET=rpi3 make build-docker
    #    - make lint
    #    - make run-docker CMD='make test'
    #- stage: Android
    #  if: branch = release*$
    #  install:
    #    - DEFAULT_ARCH=android make install-docker-deps
    #    - make install-deps-no-envs
    #  script:
    #    - make clean
    #    - DEFAULT_TARGET=android make build-docker
    #    - DEFAULT_TARGET=android-emulator make build-docker
    #    - make lint
    #    - make run-docker CMD='make test'
    #    - make run-docker CMD='make install coveralls ; make test-cover-travis'
    #- stage: Linux
    #  install:
    #    - make install-docker-deps
    #    - make install-deps-no-envs
    #    - make install-linters
    #  script:
    #    - make clean
    #    - DEFAULT_TARGET=linux make build-docker
    #    - make clean
    #    - make run-docker CMD='make test'
    #    - make lint
    #    - make run-docker CMD='make install-coveralls ; make test-cover-travis'
    - stage: Windows
      os: windows
      env:
        - QT5_BASE_DIR: C:/Qt/5.13.0/msvc2017
        - QT_DIR: C:/Qt
        - QT_QMAKE_DIR: C:/Qt/5.13.0/mingw73_64/bin

      install:
        - choco uninstall -y mingw
        - tasklist
        - choco upgrade -y msys2
        # - tasklist
        - export msys2='cmd //C RefreshEnv.cmd '
        - export msys2+='& set MSYS=winsymlinks:nativestrict '
        - export msys2+='& C:\\tools\\msys64\\msys2_shell.cmd -defterm -no-start'
        - export shell="$msys2 -mingw64 -full-path -here -c \$\* --"
        - export msys2+=" -msys2 -c \$\* --"
        # - tasklist
        # - $msys2 pacman --sync --noconfirm --needed \
        #           autoconf \
        #           automake \
        #           mingw-w64-x86_64-libtool \
        #           mingw-w64-x86_64-toolchain \
        #           perl \
        #           unzip
        # - tasklist
        # - taskkill //IM bash.exe //F
        #- export CPPFLAGS=-D__USE_MINGW_ANSI_STDIO=1
        #- export PATH=/C/tools/msys64/mingw64/bin:$PATH
        #- export GNU_MAKE=mingw32-make
        #- export MAKE=mingw32-make
        #- export AR=gcc-ar
        #- export RANLIB=gcc-ranlib
        #- export COVERITY_SCAN_BRANCH_PATTERN=disable_coverity_scan
        #- export GIT=git
        #- g++ --version
        #- $GNU_MAKE --version
        #- $GIT --version
        # - choco install make -y | true
        # - type C:\ProgramData\chocolatey\logs\chocolatey.log
        # - choco install unzip -y
#        - travis_wait 50 make install-deps-Windows
        - $msys2 export QT_MSYS2_ARCH=amd64
        - $msys2 pacman -Syyu
        - $msys2 pacman --sync --noconfirm --needed mingw-w64-x86_64-qt-creator mingw-w64-x86_64-qt5-static
        - $msys2 pacman -Scc
        - $msys2 export QT_MSYS2_STATIC=true
        - go get -v -tags=no_env github.com/therecipe/qt/cmd/...
        - $msys2 qtsetup 
        - go get -t -d -v ./...
        - wget -O magick.zip https://sourceforge.net/projects/imagemagick/files/im7-exes/ImageMagick-7.0.7-25-portable-Q16-x64.zip
        - unzip magick.zip convert.exe
        - make install-linters
        - make install-coveralls
      
      script:
        - make build
        - make test
        - make build-icon
        - make lint
        - make test-cover-travis
    #- stage: MacOS
    #  os: osx
    #  osx_image: xcode10.2
    #  install:
    #    - make install-deps
    #    - make install-coveralls
    #  script:
    #    - make clean
    #    - make build
    #    - make test
    #    - make build-icon
    #    - make lint
    #    - make test-cover-travis
notifications:
  email: false
  webhooks:
    urls:
      -  https://fathomless-fjord-24024.herokuapp.com/notify
      -  https://coveralls.io/webhook

before_deploy:
  - export VERSION="$(git describe --tags --exact-match HEAD 2> /dev/null)"
  - export ARCH="$(uname -m)"
  - export OS="$(uname -s)"
  - make prepare-release
  - make build
  - ( cd deploy && tar czf ../fibercryptowallet-${VERSION}-${OS}-${ARCH}.tar.gz ./*  )
  - pwd && ls -l .
deploy:
  provider: releases
  api_key:
    secure: DCM8aKdci6IA7dF9a84V6FEK+VkfEGoitre/wdxeZs7z4obKY41MhejHvWe017tuLhWqARwuud4PgEDcypVVDN2zB5d/D94O3JQHIDfL643WWTS7JOd+93vfOVmQ3jcGg5yRwt4T8fH3RUwNgQjagXeWLnoAhgAvUzGeAUN26AUFS4TXMmf0tnfGRGsrd8tMcnmsPxWcmrog1GllJ1m7GQ55ua1FuYV3ldyX6bnxQSx/B73T8pCvmz9OIW14nZVHgPrdOeVgHy2JlA10dKe59i1CTBevbo050CEIAque6RkzW52AQTKksmd/X2GnxODkqaZ8dux5b/uCv8Stht1jebM8AwZID8nmnmlpUHrafuZilu/m3RJ/j7YuF+UsNGOPeLG+z1tb3KcSENihRPsFOh4YHFTPHkDBbMcvg+2EKfbOIOrg/+js7Ycmmjx1NoLZgYpmMuq6mBu/TZDuFmFNVtDwevieG7berfVyvIyr3TJEdW+bm+vHGpdTcZho1cMrSmaB2r9j9UADKrRrRAU7vHCjozufg4+dnGjYHHQNCecpeirsbCymq3d7Wgezkm/LK4c0vDbtHuXo1q5VxrMjizzuBNCmiRyguGt0zSWvemU68x8W+OjmnFNJRyEa/g//2BLBQrn6A3qC+Qv5tn1REClW7xMcZXcDjIjmIW7z2Gw=
  file: fibercryptowallet-${VERSION}-${OS}-${ARCH}.tar.gz
  kip_cleanup: true
  draft: true
  overwrite: true
  on:
    repo: fibercrypto/FiberCryptoWallet
    tags: true

